head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	94.09.12.06.53.58;	author mansbrid;	state Exp;
branches;
next	;


desc
@Initial version for matlab4.2 (see matlab4.1 directory for earlier versions).
@


1.1
log
@Initial revision
@
text
@@@(#)guide.doc   1.2   94/04/18

COMMENTS
========
When writing mfiles comments are delineated by a "%" character.  Anything 
following on such a line is treated as a comment.  The first block of
comments will be displayed whenever a "help mfilename" command is given
in MATLAB.  For example the mfile 'diff' (supplied with MATLAB) has an 
initial comment block (help display) followed by other comments such as the
authors name etc.  The comments concerning the author etc are not part of the 
help display since there is a line separating the two blocks.


INTERNAL DOCUMENTATION
======================
Should include references if possible.  Give variables meaningful names so
future debugging/improvement is easier.  Please add generous comments.


HINTS ON WRITING LIBRARY MFILES
===============================
The following may serve as some suggestions in writing your mfiles

I/O argument order
++++++++++++++++++
Some thought should be given to the input/output argument lists.  The order
should NOT be changed in updated versions so that users can still run the
mfiles with the same manner (upwardly compatible).  You can of course add 
OPTIONAL arguments in an updated version and clearly describe the argument
list in the help display.  If you have complex call options, list them
explicitly in the help display.  See "help contour" for a good example.

Test I/O arguments
++++++++++++++++++
The routines should test that the correct number and order of arguments
are being passed to/from the mfile.   Also check the shape of arguments.
There is a big difference between matrices, row vectors and columns vectors.
In general I check vectors for validity, convert to column vectors and do 
all my working in column vectors since matlab is best suited for column
vectors (a matrix is just a set of column vectors in many MATLAB commands)
and pass back a row vector if a row vector was passed into the mfile.

Error messages
++++++++++++++
It is best if a routine aborts with a message saying what routine has an
error and a short description of the error.  See the change.m mfile
for examples.

Indenting
+++++++++
Please indent all MATLAB language constructs (eg  if, while)

Optimisation
++++++++++++
If you wish to optimise your MATLAB code see the MATLAB manual for hints.
I don't bother trying to optimise everything but using MATLAB's vector
notation is more efficient and easier to code than element by element
operations in a for loop such as that done in FORTRAN.

-Phil


@
