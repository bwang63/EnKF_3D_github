head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	97.08.15.06.09.48;	author mansbrid;	state Exp;
branches;
next	1.5;

1.5
date	97.08.07.02.27.52;	author mansbrid;	state Exp;
branches;
next	1.4;

1.4
date	96.04.10.07.32.38;	author mansbrid;	state Exp;
branches;
next	1.3;

1.3
date	95.08.03.06.10.00;	author mansbrid;	state Exp;
branches;
next	1.2;

1.2
date	95.01.25.01.52.30;	author mansbrid;	state Exp;
branches;
next	1.1;

1.1
date	94.12.13.03.43.01;	author mansbrid;	state Exp;
branches;
next	;


desc
@Initial version of gebco.m
@


1.6
log
@Version with hold on stuff working properly.
@
text
@function handle = gebco(symbol,linewidth);

% GEBCO      Draws coastlines in lat/lon coordinates.
%
%	GEBCO plots coastlines in the longitude range -180 to 540 using
%       the GEBCO coastlines data.  Default is to draw over entire
%       latitude/longitude region.  Use AXIS to limit region.
%
%       GEBCO('SYMBOL') uses linetype 'SYMBOL'.  Any linetype supported 
%       by PLOT is allowed.  The default is 'm-' (i.e., magenta). 
%
%       GEBCO(LINEWIDTH) or GEBCO('SYMBOL',LINEWIDTH) specifies thickness 
%       of lines.  Default is 1.
%
%       Optional output returns row vector of handle of coastline
%       segments.  This can be used to reset line properties such as
%       thickness or colour using the handle graphics command SET.
%       Note that there will be one handle for each gebco sheet.
% 
%	Examples:  >> contour(lon,lat,z,v); h=gebco('r-');
%       Plots coastlines over a contour plot created with contour and
%       returns the handle of the plotted coastline.
%                  >> set(h,'LineWidth',2)
%       This resets the thickness of all portions of coastline.
%                  >> set(h,'Color','c')
%       This changes the coastline colour to cyan. A vector RGB triple
%       may be used to specify the colour.
%                  >> set(h) 
%       shows properties that can be reset.

%     Copyright J. V. Mansbridge, CSIRO, Tue Dec 13 14:32:01 EST 1994
%       $Id: gebco.m,v 1.4 1997/08/07 02:31:21 mansbrid Exp mansbrid $
%       Based on coast.m which was developed as below:
%	John Wilkin 3 February 93
%       Peter McIntosh 26/5/94 - faster algorithm using new data set
%       John Wilkin 27 April 94 - changed input handling and help.
%       Jim Mansbridge 3/8/95 - modified to use gebco data
%       Jim Mansbridge 3/8/95 - doesn't use unnecessary gebco sheets
%       Jim Mansbridge 10/4/96 - doesn't need the $TOOLBOX environment
%                                variable.
%       John Wilkin - some matlab5 syntax and the default action is always
%       to add to the current axes (not replace)

if nargin < 1,
  symbol = 'm-';
  linewidth = 1;
end

if nargin == 1,
  if isstr(symbol)
    linewidth = 1;
  else
    linewidth = symbol;
    symbol = 'm-';
  end
end

% Find the directory which contains gebco_limits.mat
% For matlab version 4 or less it is assumed the gebco data are in the same
% directory and for version 5 or higher gebco_limits.mat is located
% directly.

vers = version;
vers = str2num(vers(1));

if vers <= 4
  temp = which('gebco');
  dir = temp(1:((length(temp) - 7)));
else
  temp = which('gebco_limits.mat');
  dir = temp(1:((length(temp)-16)));
end

nextpl_gcf = get(gcf, 'NextPlot');
ax = gca;
nextpl_gca = get(ax, 'NextPlot');
xlim = get(gca, 'XLim');
ylim = get(gca, 'YLim');
han = [];

% Get the matrix detailing the lon and lat limits of the gebco sheets.
load([dir 'gebco_limits']);

% Work through each sheet and only plot those which will appear in the
% region defined by the current axis.

set(gcf,'nextplot','add');
set(ax,'nextplot','add');

for i = 501:531
  ii = i - 500;
  if    (gebco_limits(ii, 3) < xlim(2)) & ...
	(gebco_limits(ii, 4) > xlim(1)) & ...
	(gebco_limits(ii, 1) < ylim(2)) & ...
	(gebco_limits(ii, 2) > ylim(1))
    name = ['gebco' num2str(i)];
    load([dir name])
    eval(['matrix = ' name ';']);
    h = plot(matrix(:, 2), matrix(:, 1), symbol);
    set(h,'LineWidth',linewidth);
    han = [han h];
    eval(['clear ' name ]);
  end
end

set(gca, 'XLim', xlim);
set(gca, 'YLim', ylim);
set(gcf, 'NextPlot', nextpl_gcf);
set(ax, 'NextPlot', nextpl_gca);

if nargout>0,handle=han;end
@


1.5
log
@Contains John's changes to find gebco_limits.mat and to plot over existing
data.
@
text
@d7 1
a7 2
%       latitude/longitude region.  Use AXIS to limit region.  Use
%       HOLD to plot over data.
d32 1
a32 1
%       $Id: gebco.m,v 1.3 1997/08/07 02:03:06 mansbrid Exp mansbrid $
d74 3
a76 1
nextpl = get(gcf, 'NextPlot');
d87 2
a88 1
set(gca,'nextplot','add');
d108 2
a109 1
set(gcf, 'NextPlot', nextpl);
d111 1
a111 1
if nargout>0,handle=han;end@


1.4
log
@doesn't need the $TOOLBOX environment variable.
@
text
@d11 1
a11 1
%       by PLOT is allowed.  The default is 'w-'. 
d21 1
a21 1
%	Examples:  >> contour(long,lat,z,v); hold on; h=gebco('r-');
d33 1
a33 1
%       $Id:
d42 2
d46 1
a46 1
  symbol = 'w-';
d55 1
a55 1
    symbol = 'w-';
d59 15
a73 8
% Find the directory which contains gebco_limits.  The original version
% of this used the environment variable $TOOLBOX but setting this
% appropriately is messy (it is done in the matlab script).  The new
% method is to assume that it is in the same directory as gebco.m.

%dir = [getenv('TOOLBOX') '/local/csirolib'];
temp = which('gebco');
dir = temp(1:((length(temp) - 8)));
d81 1
a81 2

eval(['load ' dir '/gebco_limits']);
d86 2
d90 1
a90 1
  if( (gebco_limits(ii, 3) < xlim(2)) & ...
d93 1
a93 1
	(gebco_limits(ii, 2) > ylim(1)) )
d95 1
a95 1
    eval(['load ' dir '/' name]);
d100 1
a100 1
    hold on
d103 1
d108 1
a108 1
if nargout>0,handle=han;end
@


1.3
log
@Improved gebco.m that reads from 31 mat files made from gebco sheets rather than
from one giant file.
@
text
@a31 3
%	Files: Requires the toolbox file /local/csirolib/coast_gebco.mat
%	which contains the Reid coastlines data in a modified format.

d33 1
d38 1
d40 2
d57 8
a64 1
dir = [getenv('TOOLBOX') '/local/csirolib'];
@


1.2
log
@changed comments.
@
text
@d5 1
a5 1
%	GEBCO plots coastlines in the longitude range -180 to 360 using
d16 4
a19 3
%       Optional output returns handle of coastline segments.  This can
%       be used to reset line properties such as thickness or colour using
%       the handle graphics command SET.  
d40 1
a56 1
eval(['load ' dir '/coast_gebco']);
d58 30
a87 3
h = plot(lon, lat, symbol);

set(h,'LineWidth',linewidth);
d89 1
a89 1
if nargout>0,handle=h;end
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
% GEBCO Draws coastlines in lat/lon coordinates.
@
