head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	95.08.03.00.13.15;	author mansbrid;	state Exp;
branches;
next	1.4;

1.4
date	95.05.05.04.40.00;	author mansbrid;	state Exp;
branches;
next	1.3;

1.3
date	95.05.05.04.37.21;	author mansbrid;	state Exp;
branches;
next	1.2;

1.2
date	95.05.05.04.28.53;	author mansbrid;	state Exp;
branches;
next	1.1;

1.1
date	95.05.05.04.27.55;	author mansbrid;	state Exp;
branches;
next	;


desc
@Rich Signell's original version of julian.m.
@


1.5
log
@Made comments unambigous.
@
text
@function [j]=julian(y,m,d,h)
% JULIAN     Converts Gregorian calendar dates to corresponding Julian day numbers.
%      The formal definition holds that Julian days start and end at
%      noon (because astronomers thought it up).
%
%    In this convention, Julian day 2440000 began at 1200 hours, May 23, 1968.
%
%
%     Usage: [j]=julian(y,m,d,h)  or  [j]=julian([y m d hour min sec])
%     ************************************************************
%
%        d.... day (1-31) component of Gregorian date
%        m.... month (1-12) component
%        y.... year (e.g., 1979) component
%        j.... decimal Julian day number
%        h.... decimal hours (assumed 0 if absent)
%
%     ************************************************************

%     recoded for MATLAB  by Rich Signell, 5-15-91
%     Hacked by Jim Mansbridge. (Rich Signell had Julian days start
%     and end at midnight.  In this convention, Julian day 2440000
%     began at 0000 hours, May 23, 1968.)
%
      if nargin==3,
        h=0.;
      elseif nargin==1,
        h=hms2h(y(:,4),y(:,5),y(:,6));
        d=y(:,3);
        m=y(:,2);
        y=y(:,1);
      end
      mo=m+9;
      yr=y-1;
      i=(m>2);
      mo(i)=m(i)-3;
      yr(i)=y(i); 
      c = floor(yr/100);
      yr = yr - c*100;
      j = floor((146097*c)/4) + floor((1461*yr)/4) + ...
           floor((153*mo +2)/5) +d +1721119;

%     If you want julian days to start and end at noon, 
%     replace the following line with:
     j=j+(h-12)/24;
 
%      j=j+h/24;

@


1.4
log
@Fix up comments a bit.
@
text
@d4 1
a4 1
%      noon, here Julian days start and end at midnight.
@


1.3
log
@Fix up comments a bit.
@
text
@d2 1
a2 1
% JULIAN  Converts Gregorian calendar dates to corresponding Julian day numbers.
@


1.2
log
@JVM's version where julian days start at noon as per the convention.
@
text
@d2 3
a4 4
%JULIAN  Converts Gregorian calendar dates to corresponding
%      Julian day numbers.  The formal definition
%      holds that Julian days start and end at noon, here
%      Julian days start and end at midnight.
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
%      Julian day numbers.  Although the formal definition
d7 1
a7 1
%    In this convention, Julian day 2440000 began at 0000 hours, May 23, 1968.
d20 1
d22 3
d46 1
a46 1
%     j=j+(h-12)/24;
d48 1
a48 1
      j=j+h/24;
@
